
$map-grid-props: (
    '': 0,
    '-md': $breakpoint-md,
    '-lg': $breakpoint-lg,
    '-xl': $breakpoint-xl
);

@mixin create-mq($breakpoint, $min-or-max) {
  @if($breakpoint == 0) {
    @content;
  } @else {
    @media screen and (#{$min-or-max}-width: $breakpoint * 1rem) {
      @content;
    }
  }
}

@mixin create-col-classes($modifier, $cols, $breakpoint) {
  @include create-mq($breakpoint, 'min') {
    .col#{$modifier}-offset-0 {
      margin-left: 0;
    }
    @for $i from 1 through $cols {
      .col#{$modifier}-#{$i} {
        flex-basis: (100 / ($cols / $i) ) * 1%;
      }
      .col#{$modifier}-offset-#{$i} {
        margin-left: (100 / ($cols / $i) ) * 1%;
      }
    }
  }
}

@each $modifier , $breakpoint in $map-grid-props {
  @if($modifier == '') {
    $modifier: '-xs';
  }
  @include create-mq($breakpoint - 1, 'max') {
    .hidden#{$modifier}-down {
      display: none !important;
    }
  }
  @include create-mq($breakpoint, 'min') {
    .hidden#{$modifier}-up {
      display: none !important;
    }
  }
}

.grid-container {
  max-width: $breakpoint-xl * 1rem;
  margin: 0 auto;
  &-fluid {
    margin: 0;
    max-width: 100%;
  }
}

.row {
    max-width: $breakpoint-xl * 1rem;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    width: 100%;
}

@each $modifier , $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $cols, $breakpoint);
}